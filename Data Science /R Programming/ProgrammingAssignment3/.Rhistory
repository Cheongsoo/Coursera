outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = TRUE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result)}
else if (is.numeric(num)) {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"])
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital$state)
result <- lapply(hospital_state, function(x) { x[num,1:2]}) #if sorted
result <- do.call(rbind, result)
result[,2]
result[,2] <- rownames(result) #Insert state name to NA
} else { stop('NA') }
## Return a data frame with the hospital names and the (abbreviated) state name
result
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 200), 10)
head(rankall("heart attack", 2000), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hosp <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hosp) <- c("hospital", "state", "heart attack", "heart failure", "pneumonia")
## Check that state and outcome are valid
if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) { stop('invalid outcome')}
## For each state, find the hospital of the given rank
else if (num == "best") {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"]) #sort outcome and hospital first
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result) }
else if (num == "worst") {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"]) #sort outcome and hospital first
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = TRUE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result)}
else if (is.numeric(num) & num < length(hosp$state)) {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"])
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital$state)
result <- lapply(hospital_state, function(x) { x[num,1:2]}) #if sorted
result <- do.call(rbind, result)
result[,2]
result[,2] <- rownames(result) #Insert state name to NA
} else { stop('NA') }
## Return a data frame with the hospital names and the (abbreviated) state name
result
}
head(rankall("heart attack", 2000), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hosp <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hosp) <- c("hospital", "state", "heart attack", "heart failure", "pneumonia")
## Check that state and outcome are valid
if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) { stop('invalid outcome')}
## For each state, find the hospital of the given rank
else if (num == "best") {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"]) #sort outcome and hospital first
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result) }
else if (num == "worst") {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"]) #sort outcome and hospital first
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = TRUE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result)}
else if (is.numeric(num) & num =< length(hosp$state)) {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"])
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital$state)
result <- lapply(hospital_state, function(x) { x[num,1:2]}) #if sorted
result <- do.call(rbind, result)
result[,2]
result[,2] <- rownames(result) #Insert state name to NA
} else { stop('NA') }
## Return a data frame with the hospital names and the (abbreviated) state name
result
}
head(rankall("heart attack", 2000), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hosp <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hosp) <- c("hospital", "state", "heart attack", "heart failure", "pneumonia")
## Check that state and outcome are valid
if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) { stop('invalid outcome')}
## For each state, find the hospital of the given rank
else if (num == "best") {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"]) #sort outcome and hospital first
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result) }
else if (num == "worst") {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"]) #sort outcome and hospital first
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = TRUE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result)}
else if (is.numeric(num)) {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"])
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital$state)
result <- lapply(hospital_state, function(x) { x[num,1:2]}) #if sorted
result <- do.call(rbind, result)
result[,2]
result[,2] <- rownames(result) #Insert state name to NA
} else { stop('NA') }
## Return a data frame with the hospital names and the (abbreviated) state name
result
}
head(rankall("heart attack", 2000), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
num <- 5000
class(num)
nu <- 100
if (num < nu) {
stop(NA)
}
if (num < nu) {
print(NA)
}
num < nu
if (nu < num) {
print(NA)
}
if (nu < num) {
stop(NA)
}
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", stringsAsFactors = FALSE)
hospital <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hospital) <- c("name", "state", "heart attack", "heart failure", "pneumonia")
length(hospital$state)
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hosp <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hosp) <- c("hospital", "state", "heart attack", "heart failure", "pneumonia")
## Check that state and outcome are valid
if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) { stop('invalid outcome')}
## For each state, find the hospital of the given rank
else if (num == "best") {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"]) #sort outcome and hospital first
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result) }
else if (num == "worst") {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"]) #sort outcome and hospital first
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = TRUE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result)}
else if (is.numeric(num) & num < length(hosp$state)) {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"])
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital$state)
result <- lapply(hospital_state, function(x) { x[num,1:2]}) #if sorted
result <- do.call(rbind, result)
result[,2]
result[,2] <- rownames(result) #Insert state name to NA
} else { stop('NA') }
## Return a data frame with the hospital names and the (abbreviated) state name
result
}
head(rankall("heart attack", 2000), 10)
head(rankall("heart attack", 5000), 10)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", stringsAsFactors = FALSE)
hospital <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hospital) <- c("name", "state", "heart attack", "heart failure", "pneumonia")
#best
sort_hospital <- order(hospital$`heart attack`, hospital$name)
sort_hospital <- hospital[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("name","state","heart attack")]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital$`heart attack`, decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital$state)
result <- lapply(hospital_state, function(x) { x[20,1:2]}) #if sorted
result <- do.call(rbind, result)
head(result,10)
result[,2]
result[,2] <- rownames(result)
length(hospital_state$AK)
hospital_state$AK
length(nrow(hospital_state$AK))
length(nrow(hospital_state))
rankhospital <- function(state, outcome, num = "best"){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospital <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hospital) <- c("name", "state", "heart attack", "heart failure", "pneumonia")
chosen_state <- hospital[which(hospital[, "state"] == state), ] #select the state
chosen_state <- chosen_state[order(chosen_state$name),] #sort by alphabetical order
chosen_outcome <- as.numeric(chosen_state[ , outcome]) #select the outcome from the state
## Check that state and outcome are valid
if (!state %in% hospital[, "state"]) { stop('invalid state') }
else if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) { stop('invalid outcome')}
else if (num == "best") {
best_outcome <- chosen_state[which(chosen_outcome == min(chosen_outcome, na.rm = TRUE)),]["name"]
best_outcome[order(best_outcome)[1], ] }
else if (num == "worst") {
best_outcome <- chosen_state[which(chosen_outcome == max(chosen_outcome, na.rm = TRUE)),]["name"]
best_outcome[order(best_outcome)[1], ] }
else if (is.numeric(num) & num < length(hosp$state)) {
chosen_state <- chosen_state[order(chosen_outcome, decreasing = FALSE), ]
chosen_state[num,"name"]
}
else { stop('NA') }
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("WY", "pneumonia", "worst")
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome, num = "best"){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospital <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hospital) <- c("name", "state", "heart attack", "heart failure", "pneumonia")
chosen_state <- hospital[which(hospital[, "state"] == state), ] #select the state
chosen_state <- chosen_state[order(chosen_state$name),] #sort by alphabetical order
chosen_outcome <- as.numeric(chosen_state[ , outcome]) #select the outcome from the state
## Check that state and outcome are valid
if (!state %in% hospital[, "state"]) { stop('invalid state') }
else if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) { stop('invalid outcome')}
else if (num == "best") {
best_outcome <- chosen_state[which(chosen_outcome == min(chosen_outcome, na.rm = TRUE)),]["name"]
best_outcome[order(best_outcome)[1], ] }
else if (num == "worst") {
best_outcome <- chosen_state[which(chosen_outcome == max(chosen_outcome, na.rm = TRUE)),]["name"]
best_outcome[order(best_outcome)[1], ] }
else if (is.numeric(num) & num < length(hosp$state)) {
chosen_state <- chosen_state[order(chosen_outcome, decreasing = FALSE), ]
chosen_state[num,"name"]
}
else { stop('NA') }
}
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome, num = "best"){
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospital <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hospital) <- c("name", "state", "heart attack", "heart failure", "pneumonia")
chosen_state <- hospital[which(hospital[, "state"] == state), ] #select the state
chosen_state <- chosen_state[order(chosen_state$name),] #sort by alphabetical order
chosen_outcome <- as.numeric(chosen_state[ , outcome]) #select the outcome from the state
## Check that state and outcome are valid
if (!state %in% hospital[, "state"]) { stop('invalid state') }
else if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) { stop('invalid outcome')}
else if (num == "best") {
best_outcome <- chosen_state[which(chosen_outcome == min(chosen_outcome, na.rm = TRUE)),]["name"]
best_outcome[order(best_outcome)[1], ] }
else if (num == "worst") {
best_outcome <- chosen_state[which(chosen_outcome == max(chosen_outcome, na.rm = TRUE)),]["name"]
best_outcome[order(best_outcome)[1], ] }
else if (is.numeric(num) & num < length(hospital$state)) {
chosen_state <- chosen_state[order(chosen_outcome, decreasing = FALSE), ]
chosen_state[num,"name"]
}
else { stop('NA') }
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("WY", "pneumonia", "worst")
rankhospital("TX", "heart failure", 4706)
rankhospital("TX", "heart failure", 400)
rankhospital("TX", "heart failure", 5000)
rankhospital("TX", "heart failure", 3000)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", stringsAsFactors = FALSE)
hospital <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hospital) <- c("name", "state", "heart attack", "heart failure", "pneumonia")
length(hospital$state)
nrow(hospital[,2])
nrow(hospital$state)
class(nrow(hospital$state))
class((hospital$state))
nrow((as.numeric(hospital$state)))
?nrow
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", stringsAsFactors = FALSE)
hospital <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hospital) <- c("name", "state", "heart attack", "heart failure", "pneumonia")
#best
sort_hospital <- order(hospital$`heart attack`, hospital$name)
sort_hospital <- hospital[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("name","state","heart attack")]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital$`heart attack`, decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital$state)
result <- lapply(hospital_state, function(x) { x[20,1:2]}) #if sorted
result <- do.call(rbind, result)
result[,2]
result[,2] <- rownames(result)
length(nrow(hospital_state))
class(hospital_state)
class(hospital_state$AK$state)
length(hospital_state$AK$state)
hospital_state[,"state"]
dim(hospital_state)
hospital_state["state"]
hospital_state[["state"]]
hospital_state[[1]]
length(hospital_state[[1]])
length(hospital_state[[1]][[2]])
nrow(hospital_state)
length(hospital_state[[1]][["state"]])
length(nrow(hospital_state))
length(nrow(hospital_state[[:]]))
length(nrow(hospital_state[:]))
(nrow(hospital_state[:]))
a <- c(1:4)
a
a[:]
a[:length(a)]
a[1:]
a[1]
a[1:4]
a[::]
a[:]
hospital_state
View(hospital_state)
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hosp <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hosp) <- c("hospital", "state", "heart attack", "heart failure", "pneumonia")
## Check that state and outcome are valid
if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) { stop('invalid outcome')}
## For each state, find the hospital of the given rank
else if (num == "best") {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"]) #sort outcome and hospital first
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result) }
else if (num == "worst") {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"]) #sort outcome and hospital first
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = TRUE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result)}
else if (is.numeric(num)) {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"])
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital$state)
result <- lapply(hospital_state, function(x) { x[num,1:2]}) #if sorted
result <- do.call(rbind, result)
result[,2]
result[,2] <- rownames(result) #Insert state name to NA
} else { stop('NA') }
## Return a data frame with the hospital names and the (abbreviated) state name
result
}
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 80), 10)
head(rankall("heart attack", 200), 10)
head(rankall("heart attack", 2000), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hosp <- data.frame(data[,2], #name
data[,7], #state
data[,11], #heart attack
data[,17], # heart failure
data[,23], stringsAsFactors = FALSE) #pneumonia
colnames(hosp) <- c("hospital", "state", "heart attack", "heart failure", "pneumonia")
## Check that state and outcome are valid
if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) { stop('invalid outcome')}
## For each state, find the hospital of the given rank
else if (num == "best") {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"]) #sort outcome and hospital first
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result) }
else if (num == "worst") {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"]) #sort outcome and hospital first
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = TRUE), ]
hospital_state <- split(outcome_hospital, outcome_hospital[,"state"])
result <- lapply(hospital_state, function(x) { x[1,1:2]})
result <- do.call(rbind, result)}
else if (is.numeric(num)) {
sort_hospital <- order(hosp[,outcome], hosp[,"hospital"])
sort_hospital <- hosp[sort_hospital, ]
outcome_hospital <- sort_hospital[,c("hospital","state",outcome)]
outcome_hospital[,3] <- as.numeric(outcome_hospital[,3])
outcome_hospital <- outcome_hospital[order(outcome_hospital[,outcome], decreasing = FALSE), ]
hospital_state <- split(outcome_hospital, outcome_hospital$state)
result <- lapply(hospital_state, function(x) { x[num,1:2]}) #if sorted
result <- do.call(rbind, result)
result[,2]
result[,2] <- rownames(result) #Insert state name to NA
} else { stop('NA') }
## Return a data frame with the hospital names and the (abbreviated) state name
result
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
